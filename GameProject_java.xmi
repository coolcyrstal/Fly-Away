<?xml version="1.0" encoding="ASCII"?>
<java:Model xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:java="http://www.eclipse.org/MoDisco/Java/0.2.incubation/java" name="GameProject">
  <ownedElements name="FlyAwayGame">
    <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@compilationUnits.0" name="FlyDot" usagesInTypeAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.1/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.1/@bodyDeclarations.8/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@leftOperand/@expression/@leftOperand/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@leftOperand/@expression/@rightOperand/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@rightOperand/@expression/@leftOperand/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@rightOperand/@expression/@rightOperand/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand/@expression/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand/@expression/@rightOperand/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@rightOperand/@expression/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@rightOperand/@expression/@rightOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.8/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.9/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.0/@expression/@rightHandSide/@type">
      <modifier visibility="public"/>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.0">
        <modifier visibility="public" inheritance="final" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.0" name="WIDTH" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.1/@expression/@arguments.0/@rightOperand/@leftOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="40"/>
        </fragments>
        <fragments originalCompilationUnit="//@compilationUnits.0" name="HEIGHT" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.1/@expression/@arguments.1/@rightOperand/@expression/@rightOperand/@leftOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="40"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.0">
        <modifier visibility="private"/>
        <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.0" name="flyimage" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.2/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.0/@elseStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.1/@expression/@expression"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.0">
        <modifier static="true"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.0" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.0/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.1/@expression/@arguments.0/@leftOperand //@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@body/@statements.2/@expression/@leftOperand //@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@body/@statements.2/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.10/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@leftOperand/@expression/@leftOperand/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@leftOperand/@expression/@rightOperand/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand/@expression/@rightOperand/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@leftHandSide"/>
        <fragments originalCompilationUnit="//@compilationUnits.0" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.1/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.1/@expression/@arguments.1/@rightOperand/@expression/@leftOperand //@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@body/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@body/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@body/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.0/@bodyDeclarations.10/@body/@statements.0/@expression/@arguments.1 //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.8/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@rightOperand/@expression/@leftOperand/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@rightOperand/@expression/@rightOperand/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@rightOperand/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@rightOperand/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.8/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.9/@body/@statements.0/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.1/@expression/@arguments.1/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@leftHandSide"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.0">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.0" name="vy" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.3/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.0/@bodyDeclarations.5/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@body/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@body/@statements.2/@expression/@leftHandSide"/>
        <fragments originalCompilationUnit="//@compilationUnits.0" name="vjump" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.4/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.0/@bodyDeclarations.5/@body/@statements.0/@expression/@rightHandSide"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalCompilationUnit="//@compilationUnits.0" name="FlyDot" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.0/@expression/@rightHandSide">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.0">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.0">
                <field variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.0"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.0">
                <field variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.0"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.0" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.0" escapedValue="&quot;res/flydot.png&quot;"/>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.0">
                <field variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.0"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@parameters.2"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.0">
                <field variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@fragments.1"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.0"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@parameters.2"/>
            </expression>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.0" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.0/@expression/@rightHandSide">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.0" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.1/@expression/@rightHandSide">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.0" name="vjump" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.3/@expression/@rightHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.4/@expression/@rightHandSide">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.0" name="jump" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@body/@statements.0/@thenStatement/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.0">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@fragments.0"/>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@fragments.1"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.0" name="render" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.1/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.0">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator="&lt;">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="2"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.18/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.0">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@fragments.0"/>
                  <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.0" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.0" escapedValue="&quot;res/flydothurt.png&quot;"/>
                    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
                  </rightHandSide>
                </expression>
              </statements>
            </thenStatement>
            <elseStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.0">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@fragments.0"/>
                  <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.0" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.0" escapedValue="&quot;res/flydot.png&quot;"/>
                    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
                  </rightHandSide>
                </expression>
              </statements>
            </elseStatement>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.0" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator="-">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator="/">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="2"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@fragments.0"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0"/>
              </arguments>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator="-">
                <rightOperand xsi:type="java:ParenthesizedExpression" originalCompilationUnit="//@compilationUnits.0">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator="+">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator="/">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="2"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@fragments.1"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
                  </expression>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.1/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@fragments.0"/>
            </expression>
          </statements>
        </body>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.0" name="update" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@elseStatement/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.0">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0" operator="+=">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@fragments.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.0" method="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.9"/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0" operator="+=">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@fragments.0"/>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.4/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.0" method="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.8"/>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.0" name="limitOfXAndY" usages="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@body/@statements.3/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.0">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator=">">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="600"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.0">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="600"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator="&lt;">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="120"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.0">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="120"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator=">">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="1000"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.0">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="1000"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.0" name="change_G_WhenHigh" usages="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@body/@statements.1/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.0">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.0" operator=">">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="400"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.0">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.4/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="java:CastExpression" originalCompilationUnit="//@compilationUnits.0">
                    <expression xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.0" operator="-">
                      <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="0.1"/>
                    </expression>
                    <type type="//@orphanTypes.2"/>
                  </rightHandSide>
                </expression>
              </statements>
            </thenStatement>
            <elseStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.0">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.0">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.0">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.4/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="java:CastExpression" originalCompilationUnit="//@compilationUnits.0">
                    <expression xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.0" operator="-">
                      <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.0" tokenValue="0.2"/>
                    </expression>
                    <type type="//@orphanTypes.2"/>
                  </rightHandSide>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.0" name="isCollide" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.0">
          <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.0">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.0" method="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.0">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0"/>
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1"/>
              <expression xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.3"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
    </ownedElements>
    <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@compilationUnits.1" name="Coins" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.12/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.3/@expression/@rightHandSide/@type">
      <modifier visibility="public"/>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.1">
        <modifier static="true"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.1" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.0/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide"/>
        <fragments originalCompilationUnit="//@compilationUnits.1" name="x2" usageInVariableAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.1/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.2/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.3/@expression/@leftOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.3/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.8/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.1">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.1" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.2/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@body/@statements.1/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@body/@statements.2/@expression/@field //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand"/>
        <fragments originalCompilationUnit="//@compilationUnits.1" name="y2" usageInVariableAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.3/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.8/@body/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.1">
        <modifier visibility="private"/>
        <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.1" name="coins" usageInVariableAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.5/@expression/@leftHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalCompilationUnit="//@compilationUnits.1" name="Coins" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.3/@expression/@rightHandSide">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.1">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.1">
                <field variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.1"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.1">
                <field variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.1"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.1"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="+">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="200"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@parameters.0"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.1">
                <field variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.1"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.1">
                <field variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@fragments.1"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.1"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="100"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@parameters.1"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.4"/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.2/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.1" escapedValue="&quot;res/RainbowCoin.png&quot;"/>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
              </rightHandSide>
            </expression>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.1" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.1/@expression/@rightHandSide/@leftOperand">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.1" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.2/@expression/@rightHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.3/@expression/@rightHandSide/@leftOperand">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.1" name="randomCoinPosition" usages="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.3/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.4/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.1">
          <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.1">
            <type type="//@ownedElements.2/@ownedPackages.2/@ownedElements.0"/>
            <fragments originalCompilationUnit="//@compilationUnits.1" name="random" usageInVariableAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@body/@statements.1/@expression/@rightHandSide/@leftOperand/@expression">
              <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.2/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.0">
                <type type="//@ownedElements.2/@ownedPackages.2/@ownedElements.0"/>
              </initializer>
            </fragments>
            <modifier/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.1">
                <field variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.1"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="120"/>
                <leftOperand xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.2/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.1">
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="400"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.1">
              <field variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@fragments.0"/>
              <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.1"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.2"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.1" name="render" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.7/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.1">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.0"/>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="120"/>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@fragments.0"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.2/@fragments.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator=">=">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="4000"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.1">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
                  <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.1"/>
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="-">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="240"/>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="+">
                      <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                        <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                      </rightOperand>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@fragments.1"/>
                    </leftOperand>
                  </arguments>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.2/@fragments.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.1" name="update" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.4/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.1">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1" operator="+=">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.0"/>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="&lt;">
              <rightOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.1" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="100"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.1">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.4"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.0"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="1100"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator=">=">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="4000"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.1">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.1"/>
                  <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                  </rightHandSide>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="&lt;">
              <rightOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.1" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="100"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.1"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.1">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.4"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.1">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.1">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.1"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="1200"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.1" name="isCollide" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.1">
          <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.1">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.0"/>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="120"/>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@fragments.0"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.3"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.1" name="isCollide2" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.1/@expression/@leftOperand">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.1">
          <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.1">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.1" method="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.1">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.1"/>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.1" tokenValue="240"/>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.1" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@fragments.1"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.3"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
    </ownedElements>
    <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@compilationUnits.2" name="SpeedUp" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.14/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.5/@expression/@rightHandSide/@type">
      <modifier visibility="public"/>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.2">
        <modifier visibility="private"/>
        <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.2" name="speedUp" usageInVariableAccess="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.2/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.2/@expression/@expression"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.2">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.2" name="i" usageInVariableAccess="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@elseStatement/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@elseStatement/@elseStatement/@expression/@leftHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.1/@expression/@rightHandSide/@arguments.0/@rightOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="0"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalCompilationUnit="//@compilationUnits.2" name="SpeedUp" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.5/@expression/@rightHandSide">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.2">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.2">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.2">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.0/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.2" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.2" escapedValue="&quot;res/speedup0.png&quot;"/>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
              </rightHandSide>
            </expression>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.2" name="vx">
          <modifier/>
          <type type="//@orphanTypes.0"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.2" name="render" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.3/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.2">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.2">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator=">=">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="400"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                </leftOperand>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator="&lt;=">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="550"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                </leftOperand>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.2">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.2">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.2">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.1/@fragments.0"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="3"/>
                </expression>
              </statements>
            </thenStatement>
            <elseStatement xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.2">
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator=">=">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="200"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                  </leftOperand>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator="&lt;">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="400"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                  </leftOperand>
                </leftOperand>
              </expression>
              <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.2">
                <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.2">
                  <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.2">
                    <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.1/@fragments.0"/>
                    <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="2"/>
                  </expression>
                </statements>
              </thenStatement>
              <elseStatement xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.2">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator="&amp;&amp;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator=">">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="0"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                    </leftOperand>
                  </rightOperand>
                  <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator="&lt;">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="200"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                    </leftOperand>
                  </leftOperand>
                </expression>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.2">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.2">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.2">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.1/@fragments.0"/>
                      <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="1"/>
                    </expression>
                  </statements>
                </thenStatement>
                <elseStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.2">
                  <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.2">
                    <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.1/@fragments.0"/>
                    <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="0"/>
                  </expression>
                </elseStatement>
              </elseStatement>
            </elseStatement>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.2">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.2">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.0/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.2" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.2" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.1/@fragments.0"/>
                  <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.2" escapedValue="&quot;res/speedup&quot;"/>
                  <extendedOperands xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.2" escapedValue="&quot;.png&quot;"/>
                </arguments>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.2">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.2" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="20"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.2" tokenValue="180"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.0/@fragments.0"/>
            </expression>
          </statements>
        </body>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
    </ownedElements>
    <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@compilationUnits.3" name="Colision" usagesInTypeAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.7/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.8/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.9/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.0/@bodyDeclarations.10/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.1/@bodyDeclarations.7/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.1/@bodyDeclarations.8/@body/@statements.0/@expression/@expression">
      <modifier visibility="public"/>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.3" name="isCollide" usages="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.10/@body/@statements.0/@expression">
        <modifier static="true"/>
        <body originalCompilationUnit="//@compilationUnits.3">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.3">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&lt;=">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="120"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@parameters.1"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.3">
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.3">
                <expression xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.3" value="true"/>
              </statements>
            </thenStatement>
            <elseStatement xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.3">
              <expression xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.3"/>
            </elseStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.3" name="x">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.3" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@body/@statements.0/@expression/@leftOperand">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.3" name="isCollideCoins" usages="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.7/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.1/@bodyDeclarations.8/@body/@statements.0/@expression">
        <modifier static="true"/>
        <body originalCompilationUnit="//@compilationUnits.3">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.3">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&amp;&amp;">
              <rightOperand xsi:type="java:ParenthesizedExpression" originalCompilationUnit="//@compilationUnits.3">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&amp;&amp;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator=">=">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="-">
                      <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@parameters.1"/>
                      <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="600"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="30"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                        <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                      </leftOperand>
                    </leftOperand>
                  </rightOperand>
                  <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&lt;=">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="60"/>
                      <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="-">
                        <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@parameters.1"/>
                        <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="600"/>
                      </leftOperand>
                    </rightOperand>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="30"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                        <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                      </leftOperand>
                    </leftOperand>
                  </leftOperand>
                </expression>
              </rightOperand>
              <leftOperand xsi:type="java:ParenthesizedExpression" originalCompilationUnit="//@compilationUnits.3">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&amp;&amp;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator=">=">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@parameters.0"/>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="30"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0">
                        <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                      </leftOperand>
                    </leftOperand>
                  </rightOperand>
                  <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&lt;=">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="60"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@parameters.0"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="30"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0">
                        <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                      </leftOperand>
                    </leftOperand>
                  </leftOperand>
                </expression>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.3">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.3">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.3" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="500"/>
                </expression>
              </statements>
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.3">
                <expression xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.3" value="true"/>
              </statements>
            </thenStatement>
            <elseStatement xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.3">
              <expression xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.3"/>
            </elseStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.3" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@leftOperand/@expression/@leftOperand/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@leftOperand/@expression/@rightOperand/@rightOperand">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.3" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@rightOperand/@expression/@leftOperand/@rightOperand/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@expression/@rightOperand/@expression/@rightOperand/@rightOperand/@rightOperand">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.3" name="isCollideBullet" usages="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.7/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.8/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.9/@body/@statements.0/@expression">
        <modifier static="true"/>
        <body originalCompilationUnit="//@compilationUnits.3">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.3">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&amp;&amp;">
              <rightOperand xsi:type="java:ParenthesizedExpression" originalCompilationUnit="//@compilationUnits.3">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&amp;&amp;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator=">=">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="-">
                      <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@parameters.1"/>
                      <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="600"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                      <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                    </leftOperand>
                  </rightOperand>
                  <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&lt;=">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="30"/>
                      <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="-">
                        <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@parameters.1"/>
                        <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="600"/>
                      </leftOperand>
                    </rightOperand>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                      <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                    </leftOperand>
                  </leftOperand>
                </expression>
              </rightOperand>
              <leftOperand xsi:type="java:ParenthesizedExpression" originalCompilationUnit="//@compilationUnits.3">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&amp;&amp;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator=">=">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@parameters.0"/>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="30"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0">
                        <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                      </leftOperand>
                    </leftOperand>
                  </rightOperand>
                  <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="&lt;=">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.3" operator="+">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.3" tokenValue="100"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@parameters.0"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0">
                      <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                    </leftOperand>
                  </leftOperand>
                </expression>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.3">
              <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.3">
                <expression xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.3" value="true"/>
              </statements>
            </thenStatement>
            <elseStatement xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.3">
              <expression xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.3"/>
            </elseStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.3" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand/@expression/@leftOperand/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@leftOperand/@expression/@rightOperand/@rightOperand">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.3" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@rightOperand/@expression/@leftOperand/@rightOperand/@leftOperand/@rightOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@body/@statements.0/@expression/@rightOperand/@expression/@rightOperand/@rightOperand/@rightOperand">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
    </ownedElements>
    <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@compilationUnits.4" name="AngleBow" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.2/@expression/@rightHandSide/@type">
      <modifier visibility="public"/>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.4">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.4" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@body/@statements.0/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.0/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.4/@bodyDeclarations.11/@body/@statements.0/@expression/@leftHandSide"/>
        <fragments originalCompilationUnit="//@compilationUnits.4" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@body/@statements.1/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.1/@rightOperand/@expression/@leftOperand //@ownedElements.0/@ownedElements.4/@bodyDeclarations.11/@body/@statements.1/@expression/@leftHandSide"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.4">
        <modifier visibility="private"/>
        <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.4" name="anglebow" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@body/@statements.2/@expression/@leftHandSide //@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.1/@expression/@expression"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.4">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.4" name="WIDTH" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.0/@leftOperand/@rightOperand/@leftOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="200"/>
        </fragments>
        <fragments originalCompilationUnit="//@compilationUnits.4" name="HEIGHT" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.1/@rightOperand/@expression/@rightOperand/@leftOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="120"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.4">
        <modifier/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.4" name="angle" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.1/@expression/@arguments.0 //@ownedElements.0/@ownedElements.4/@bodyDeclarations.9/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.4/@bodyDeclarations.10/@body/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.4/@bodyDeclarations.10/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.4/@bodyDeclarations.10/@body/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.4/@bodyDeclarations.10/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@expression/@leftOperand/@rightOperand/@leftOperand/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@expression/@rightOperand/@rightOperand/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightOperand/@leftOperand/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@elseStatement/@expression/@rightOperand/@leftOperand/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@expression/@leftOperand/@rightOperand/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@expression/@rightOperand/@rightOperand/@leftOperand/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@expression/@rightOperand/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@expression/@rightOperand/@rightOperand/@leftOperand">
          <initializer xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.4" operator="-">
            <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="45"/>
          </initializer>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.4">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.4" name="add" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.7/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.4/@bodyDeclarations.8/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.4/@bodyDeclarations.9/@body/@statements.0/@expression/@rightHandSide"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalCompilationUnit="//@compilationUnits.4" name="AngleBow" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.2/@expression/@rightHandSide">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.4">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.4">
                <field variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.4"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.4">
                <field variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@fragments.1"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.4"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.1/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.4" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.4" escapedValue="&quot;res/AngleBow.png&quot;"/>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
              </rightHandSide>
            </expression>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.4" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@body/@statements.0/@expression/@rightHandSide">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.4" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@body/@statements.1/@expression/@rightHandSide">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.4" name="render" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.2/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.4">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.4" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.4" operator="+">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="20"/>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.4" operator="-">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.4" operator="/">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="2"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.2/@fragments.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0"/>
                </leftOperand>
              </arguments>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.4" operator="-">
                <rightOperand xsi:type="java:ParenthesizedExpression" originalCompilationUnit="//@compilationUnits.4">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.4" operator="+">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.4" operator="/">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="2"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.2/@fragments.1"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@fragments.1"/>
                  </expression>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.1/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.1/@fragments.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.4" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.2">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.1/@fragments.0"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.4" name="increaseAngle" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.2/@thenStatement/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.4">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.4/@fragments.0"/>
              <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.4" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="5"/>
              </rightHandSide>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.4" name="decreaseAngle" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.3/@thenStatement/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.4">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.4/@fragments.0"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="5"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.4" name="update" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.2/@thenStatement/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.3/@thenStatement/@statements.1/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.4">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4" operator="+=">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0"/>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.4/@fragments.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.4" method="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.10"/>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.4" name="limitAngle" usages="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.9/@body/@statements.1/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.4">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.4" operator="&lt;">
              <rightOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.4" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="80"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.4">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0"/>
                  <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.4" operator="-">
                    <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="80"/>
                  </rightHandSide>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.4" operator=">">
              <rightOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.4" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="10"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.4">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0"/>
                  <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.4" operator="-">
                    <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="10"/>
                  </rightHandSide>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.4" name="remove" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.4/@thenStatement/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.4">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4" operator="-=">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@fragments.0"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="200"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.4">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.4" operator="+=">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@fragments.1"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.4" tokenValue="200"/>
            </expression>
          </statements>
        </body>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
    </ownedElements>
    <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@compilationUnits.5" name="Bullet" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.4/@expression/@rightHandSide/@type">
      <modifier visibility="public"/>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.5">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.5" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.0/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide"/>
        <fragments originalCompilationUnit="//@compilationUnits.5" name="x2" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.1/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.2/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.2/@thenStatement/@statements.0/@elseStatement/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.3/@expression/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.3/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.8/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide"/>
        <fragments originalCompilationUnit="//@compilationUnits.5" name="x3" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.2/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.4/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.5/@expression/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.5/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.9/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.2/@thenStatement/@statements.0/@expression/@leftHandSide"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.5">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.5" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.3/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@body/@statements.1/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@body/@statements.2/@expression/@field //@ownedElements.0/@ownedElements.5/@bodyDeclarations.7/@body/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand"/>
        <fragments originalCompilationUnit="//@compilationUnits.5" name="y2" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.4/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.1/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.8/@body/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand"/>
        <fragments originalCompilationUnit="//@compilationUnits.5" name="y3" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.5/@expression/@leftHandSide/@field //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.2/@thenStatement/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.9/@body/@statements.0/@expression/@arguments.1/@leftOperand/@leftOperand"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.5">
        <modifier visibility="private"/>
        <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.5" name="bullet" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.7/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.2/@thenStatement/@statements.0/@expression/@expression"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalCompilationUnit="//@compilationUnits.5" name="Bullet" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.4/@expression/@rightHandSide">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.5">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.5">
                <field variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.5"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.5">
                <field variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.1"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.5"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="+">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="300"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@parameters.0"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.5">
                <field variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.2"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.5"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="+">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="600"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@parameters.0"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.5">
                <field variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.5"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.5">
                <field variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.1"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.5"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.5">
                <field variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.2"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.5"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.5"/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.2/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.5" escapedValue="&quot;res/firebullet.png&quot;"/>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
              </rightHandSide>
            </expression>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.5" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.1/@expression/@rightHandSide/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.2/@expression/@rightHandSide/@leftOperand">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.5" name="y" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.3/@expression/@rightHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.4/@expression/@rightHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.5/@expression/@rightHandSide">
          <modifier/>
          <type type="//@orphanTypes.2"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.5" name="render" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.8/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.5">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.0"/>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="120"/>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.0"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.2/@fragments.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator=">=">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="4000"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.5">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
                  <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.1"/>
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="240"/>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="+">
                      <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                        <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                      </rightOperand>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.1"/>
                    </leftOperand>
                  </arguments>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.2/@fragments.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator=">=">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="8000"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.5">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
                  <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.2"/>
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="180"/>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="+">
                      <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                        <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                      </rightOperand>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.2"/>
                    </leftOperand>
                  </arguments>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.2/@fragments.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.5" name="randomBulletPosition" usages="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.1/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.3/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.5/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.6/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.5">
          <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.5">
            <type type="//@ownedElements.2/@ownedPackages.2/@ownedElements.0"/>
            <fragments originalCompilationUnit="//@compilationUnits.5" name="random" usageInVariableAccess="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@body/@statements.1/@expression/@rightHandSide/@leftOperand/@expression">
              <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.2/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.0">
                <type type="//@ownedElements.2/@ownedPackages.2/@ownedElements.0"/>
              </initializer>
            </fragments>
            <modifier/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
              <leftHandSide xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.5">
                <field variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.0"/>
                <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.5"/>
              </leftHandSide>
              <rightHandSide xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="120"/>
                <leftOperand xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.2/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.1">
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="400"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@body/@statements.0/@fragments.0"/>
                </leftOperand>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:FieldAccess" originalCompilationUnit="//@compilationUnits.5">
              <field variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.0"/>
              <expression xsi:type="java:ThisExpression" originalCompilationUnit="//@compilationUnits.5"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.2"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.5" name="update" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.5/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.5">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5" operator="+=">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.0"/>
              <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="15"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="&lt;">
              <rightOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="50"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.5">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.5"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.0"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="2000"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator=">=">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="4000"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.5">
              <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator=">=">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="6000"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
                  </leftOperand>
                </expression>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.5">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5" operator="+=">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.1"/>
                      <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                        <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="20"/>
                      </rightHandSide>
                    </expression>
                  </statements>
                </thenStatement>
                <elseStatement xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                  <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5" operator="+=">
                    <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.1"/>
                    <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                      <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="15"/>
                    </rightHandSide>
                  </expression>
                </elseStatement>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="&lt;">
              <rightOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="50"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.1"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.5">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.5"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.1"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="2300"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator=">=">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="8000"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.6"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.5">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.2"/>
                  <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                    <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="15"/>
                  </rightHandSide>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="&lt;">
              <rightOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="50"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.2"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.5">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.5"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.5">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.5">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.2"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="2600"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.5" name="isCollide" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.5">
          <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.0"/>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="120"/>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.0"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.3"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.5" name="isCollide2" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.1/@expression/@leftOperand">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.5">
          <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.1"/>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="240"/>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.1"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.3"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.5" name="isCollide3" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.2/@expression/@leftOperand">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.5">
          <statements xsi:type="java:ReturnStatement" originalCompilationUnit="//@compilationUnits.5">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.5" method="//@ownedElements.0/@ownedElements.3/@bodyDeclarations.2">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.2"/>
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="-">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.5" tokenValue="180"/>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.5" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                    <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@fragments.2"/>
                </leftOperand>
              </arguments>
              <expression xsi:type="java:TypeAccess" type="//@ownedElements.0/@ownedElements.3"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.4"/>
      </bodyDeclarations>
    </ownedElements>
    <ownedElements xsi:type="java:ClassDeclaration" originalCompilationUnit="//@compilationUnits.6" name="FlyAwayGame" usagesInTypeAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.0/@expression/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.1/@expression/@arguments.1/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@body/@statements.2/@expression/@rightHandSide/@qualifier //@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@body/@statements.0/@elseStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.1/@expression/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.0/@expression/@rightHandSide/@qualifier //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.2/@expression/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.2/@thenStatement/@statements.0/@expression/@rightHandSide/@qualifier //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@expression/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@expression/@rightOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@expression/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@expression/@rightOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@elseStatement/@expression/@leftOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@elseStatement/@expression/@rightOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.1/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.1/@expression/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.2/@expression/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.2/@expression/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.2/@thenStatement/@statements.0/@expression/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.4/@expression/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type">
      <modifier visibility="public"/>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" inheritance="final" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="GAME_WIDTH" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.2/@expression/@arguments.0">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1000"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" inheritance="final" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="GAME_HEIGHT" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.2/@expression/@arguments.1 //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.1/@expression/@arguments.1/@leftOperand //@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.0/@expression/@arguments.1/@leftOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="600"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="x" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.1/@expression/@arguments.0/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@body/@statements.1/@expression/@leftHandSide">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
        </fragments>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="vx" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.5/@expression/@rightHandSide/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.1/@expression/@rightHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.36/@body/@statements.0/@expression/@rightHandSide/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.5/@thenStatement/@statements.3/@expression/@leftHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.2/@thenStatement/@statements.0/@expression/@rightHandSide">
          <initializer xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
            <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
          </initializer>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" inheritance="final" static="true"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="FLYDOT_JUMP_VY" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.0/@expression/@rightHandSide/@arguments.2 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="G" usageInVariableAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@body/@statements.2/@expression/@rightHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@body/@statements.0/@elseStatement/@statements.0/@expression/@leftHandSide">
          <initializer xsi:type="java:CastExpression" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
              <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0.2"/>
            </expression>
            <type type="//@orphanTypes.2"/>
          </initializer>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.4"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="isStarted" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@expression/@leftOperand/@leftOperand/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.4/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@thenStatement/@statements.0/@elseStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.41/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.1/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.2/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.3/@expression/@leftOperand/@leftOperand"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.4"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="startGame" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@expression/@leftOperand/@leftOperand/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.4/@thenStatement/@statements.0/@expression/@leftHandSide">
          <initializer xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
        </fragments>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="howToPlay" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.1/@thenStatement/@statements.2/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.2/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.3/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@expression/@leftOperand">
          <initializer xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.4"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="isBounce" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.2/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.43/@body/@statements.0/@thenStatement/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.43/@body/@statements.0/@thenStatement/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide">
          <initializer xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
        </fragments>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="isDead" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@expression/@leftOperand/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.1/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@body/@statements.3/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@thenStatement/@statements.0/@elseStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.41/@body/@statements.1/@thenStatement/@statements.1/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.0/@expression/@rightOperand/@leftOperand">
          <initializer xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.4"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="speedSkill" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.5/@thenStatement/@statements.0/@expression/@leftHandSide">
          <initializer xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@ownedElements.0/@ownedElements.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="flydot" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.1/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.1/@expression/@arguments.1/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@elseStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@ownedElements.0/@ownedElements.4"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="anglebow" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.2/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.4/@thenStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.2/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@expression/@leftOperand/@rightOperand/@leftOperand/@operand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@expression/@rightOperand/@rightOperand/@rightOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightOperand/@leftOperand/@operand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@elseStatement/@expression/@rightOperand/@leftOperand/@operand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@expression/@leftOperand/@rightOperand/@rightOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@expression/@rightOperand/@rightOperand/@leftOperand/@operand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@expression/@rightOperand/@rightOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@expression/@rightOperand/@rightOperand/@leftOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.2/@thenStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.2/@thenStatement/@statements.1/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.3/@thenStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.3/@thenStatement/@statements.1/@expression/@expression"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="color" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.1/@expression/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.5/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.6/@expression/@arguments.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="greyblack" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@arguments.2 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@arguments.5">
          <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13/@bodyDeclarations.0">
            <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="20"/>
            <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="20"/>
            <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="20"/>
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13"/>
          </initializer>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@ownedElements.0/@ownedElements.1"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="coins" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.7/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.3/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.4/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.1/@expression/@leftOperand/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@ownedElements.0/@ownedElements.5"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="bullet" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.8/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.4/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.5/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.1/@expression/@leftOperand/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.2/@expression/@leftOperand/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.2/@thenStatement/@statements.0/@expression/@leftHandSide/@qualifier"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@ownedElements.0/@ownedElements.2"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="speedup" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.3/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@body/@statements.5/@expression/@leftHandSide"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="score" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.7/@expression/@arguments.0/@rightOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.7/@expression/@arguments.0/@rightOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.0/@thenStatement/@statements.0/@elseStatement/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@body/@statements.1/@thenStatement/@statements.0/@elseStatement/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.36/@body/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.38/@body/@statements.0/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.1/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.1/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.2/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@body/@statements.2/@expression/@leftOperand //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.2/@expression/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.2/@expression/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.2/@thenStatement/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@body/@statements.4/@expression/@leftOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
        </fragments>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="countScore" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@body/@statements.6/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.38/@body/@statements.0/@expression/@leftOperand/@rightOperand/@rightOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.38/@body/@statements.0/@thenStatement/@statements.0/@expression/@operand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="jumpLimit" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.8/@expression/@arguments.0/@rightOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.0/@fragments.0/@initializer/@arguments.0/@rightOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@body/@statements.2/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.38/@body/@statements.0/@thenStatement/@statements.1/@expression/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.38/@body/@statements.0/@thenStatement/@statements.2/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.38/@body/@statements.0/@thenStatement/@statements.2/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.43/@body/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@body/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@body/@statements.0/@thenStatement/@statements.1/@expression/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@body/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@body/@statements.1/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@body/@statements.2/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@body/@statements.2/@thenStatement/@statements.0/@expression/@leftHandSide">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="6"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="BULLET_COUNT">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="heart" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.2/@fragments.0/@initializer/@arguments.0/@rightOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@body/@statements.5/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.41/@body/@statements.0/@expression/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.41/@body/@statements.1/@expression/@leftOperand //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.0/@expression/@leftOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="public" static="true"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="delaySkillSpeed" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@body/@statements.7/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@thenStatement/@statements.1/@expression/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@elseStatement/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@elseStatement/@thenStatement/@statements.0/@expression/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.5/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.5/@thenStatement/@statements.2/@expression/@leftHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@elseStatement/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.0/@elseStatement/@elseStatement/@expression/@rightOperand/@leftOperand">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="bounce" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@body/@statements.4/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.1/@expression/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.43/@body/@statements.0/@thenStatement/@statements.1/@thenStatement/@statements.1/@expression/@leftHandSide">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:FieldDeclaration" originalCompilationUnit="//@compilationUnits.6">
        <modifier visibility="private"/>
        <type type="//@orphanTypes.0"/>
        <fragments originalCompilationUnit="//@compilationUnits.6" name="speedDistance" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@thenStatement/@statements.0/@expression/@leftHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@thenStatement/@statements.2/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.5/@thenStatement/@statements.1/@expression/@leftHandSide">
          <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
        </fragments>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:ConstructorDeclaration" originalCompilationUnit="//@compilationUnits.6" name="FlyAwayGame" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:SuperConstructorInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.6/@bodyDeclarations.0">
            <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.22/@parameters.0"/>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="title" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.22/@body/@statements.0/@arguments.0">
          <modifier/>
          <type type="//@ownedElements.2/@ownedPackages.0/@ownedElements.2"/>
        </parameters>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="render">
        <annotations originalCompilationUnit="//@compilationUnits.6">
          <type type="//@ownedElements.2/@ownedPackages.0/@ownedElements.5"/>
        </annotations>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@parameters.0"/>
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@parameters.1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@parameters.1"/>
            </expression>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="container" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.1/@expression/@arguments.0">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="g" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.0/@expression/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.1/@expression/@arguments.1 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.2/@expression/@arguments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.3/@expression/@arguments.0">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="gameMenu" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.1"/>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                  <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.1"/>
                </rightOperand>
                <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                    <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.0"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                    <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
                  </leftOperand>
                </leftOperand>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Please Select Game Menu&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="400"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="250"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;1 : Start Game&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="400"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="300"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;2 : Back to Menu Game&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="400"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="320"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;3 : Exit Game&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="400"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="340"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;4 : How To Play&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="400"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="360"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@parameters.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="g" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.1/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.2/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.3/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.4/@expression/@expression">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14"/>
        </parameters>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="gameMenuFunction" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.1/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="// Press 1 start, 2 menu, 3 exit 4 how to play" prefixOfParent="true"/>
            <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.0"/>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.30"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.6">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.6">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.3">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.14/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.11">
                      <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.29"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28">
                  <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@parameters.1"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.5">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.12/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.4">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.0">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.1/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
              </arguments>
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@bodyDeclarations.0">
                <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@parameters.0"/>
              </expression>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.0"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.1"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.1"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.1"/>
              </rightOperand>
              <leftOperand xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.0">
                <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.2/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
                </arguments>
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@bodyDeclarations.0">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@parameters.0"/>
                </expression>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@bodyDeclarations.1">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@parameters.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.0">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.3/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
              </arguments>
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@bodyDeclarations.0">
                <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@parameters.0"/>
              </expression>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.1"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="container" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.1/@expression/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.2/@expression/@leftOperand/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.2/@thenStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.3/@expression/@expression/@expression">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="g" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.6/@expression/@arguments.0">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="howToPlay" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.2/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.1"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;How To Play&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="450"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="80"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                    <rightOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;---------------------------------------&quot;"/>
                    <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;--------------------------------------&quot;"/>
                    <extendedOperands xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;--------------&quot;"/>
                  </arguments>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="80"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Before Start Game&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="150"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
                <fragments originalCompilationUnit="//@compilationUnits.6" name="bow" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.4/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.5/@expression/@expression">
                  <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;res/AngleBow.png&quot;"/>
                    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
                  </initializer>
                </fragments>
                <modifier/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.2">
                  <arguments xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                    <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="45"/>
                  </arguments>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.3/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.3">
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="600"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="80"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="80"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.3/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;1. You should press 'up/down' key to change angle of bow &quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="180"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;2. Press 'Enter' to start.&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="200"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Key &amp;&amp; Skill in Game&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="270"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Spacebar : jump&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="300"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Skill Speedup : 'A'&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="320"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Please press '2' to get back menu game or '1' to start game&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="500"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="g" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.0/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.1/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.2/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.6/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.7/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.8/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.9/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.10/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.11/@expression/@expression">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="showWhenDead" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@body/@statements.3/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
              <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.1"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0"/>
                <fragments originalCompilationUnit="//@compilationUnits.6" name="box" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.2/@expression/@arguments.0">
                  <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.0">
                    <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="200"/>
                    <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="30"/>
                    <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="600"/>
                    <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="500"/>
                    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0"/>
                  </initializer>
                </fragments>
                <modifier/>
              </statements>
              <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.16"/>
                <fragments originalCompilationUnit="//@compilationUnits.6" name="fillBlack" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.2/@expression/@arguments.1">
                  <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0/@bodyDeclarations.0">
                    <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="200"/>
                    <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="30"/>
                    <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@fragments.1"/>
                    <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="800"/>
                    <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="530"/>
                    <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@fragments.1"/>
                    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0"/>
                  </initializer>
                </fragments>
                <modifier/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.1">
                  <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.0/@fragments.0"/>
                  <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.1/@fragments.0"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;You are dead!!!!!&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="430"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="50"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
                <fragments originalCompilationUnit="//@compilationUnits.6" name="rabbit555" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.5/@expression/@expression">
                  <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;res/rabbit555.png&quot;"/>
                    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
                  </initializer>
                </fragments>
                <modifier/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="320"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.4/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;5555555555555&quot;"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="550"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="250"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                    <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
                    <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Your score is &quot;"/>
                  </arguments>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="420"/>
                  <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="450"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@parameters.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="g" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.2/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.3/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.6/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.7/@expression/@expression">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="stringFunction" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.6/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//text that show when play game" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13/@bodyDeclarations.0">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="255"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.2">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@fragments.0"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
              <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;2 : Back to Menu&quot;"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="120"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="10"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
              <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;3 : Exit&quot;"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="300"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="10"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
              <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Esc : Restart Game&quot;"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="400"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="10"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13/@bodyDeclarations.0">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="255"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="255"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="255"/>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.2">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@fragments.0"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
                <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Score : &quot;"/>
              </arguments>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="850"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="10"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@parameters.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0">
              <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
                <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Jump Limit x &quot;"/>
              </arguments>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="55"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="40"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@parameters.0"/>
            </expression>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="g" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.1/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.2/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.3/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.4/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.6/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.7/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.8/@expression/@expression">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="jumpAndHeartPic" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.5/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//Picture of jump and heart gauge" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
            <fragments originalCompilationUnit="//@compilationUnits.6" name="jumppic" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.1/@expression/@expression">
              <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
                  <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;res/jump&quot;"/>
                  <extendedOperands xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;.png&quot;"/>
                </arguments>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
              </initializer>
            </fragments>
            <modifier/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="20"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="40"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.0/@fragments.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
            <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
            <fragments originalCompilationUnit="//@compilationUnits.6" name="heartPic" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.3/@expression/@expression">
              <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.18/@fragments.0"/>
                  <leftOperand xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;res/heart&quot;"/>
                  <extendedOperands xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;.png&quot;"/>
                </arguments>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
              </initializer>
            </fragments>
            <modifier/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="20"/>
              <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="80"/>
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.2/@fragments.0"/>
            </expression>
          </statements>
        </body>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="bg" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@thenStatement/@statements.0/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//Create background" prefixOfParent="true"/>
        <modifier visibility="private"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:ForStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="20"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@initializers.0/@fragments.0"/>
            </expression>
            <updaters xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.6">
              <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@initializers.0/@fragments.0"/>
            </updaters>
            <initializers xsi:type="java:VariableDeclarationExpression" originalCompilationUnit="//@compilationUnits.6">
              <type type="//@orphanTypes.0"/>
              <fragments originalCompilationUnit="//@compilationUnits.6" name="i" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@updaters.0/@operand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.1/@expression/@arguments.0/@rightOperand/@rightOperand">
                <initializer xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
              </fragments>
              <modifier/>
            </initializers>
            <body xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
                <fragments originalCompilationUnit="//@compilationUnits.6" name="background" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.1/@expression/@expression">
                  <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;res/bg.png&quot;"/>
                    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
                  </initializer>
                </fragments>
                <modifier/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1">
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                      <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@initializers.0/@fragments.0"/>
                      <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2000"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.0"/>
                  </arguments>
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="120"/>
                    <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                      <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                        <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                      </rightOperand>
                      <leftOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                        <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="600"/>
                      </leftOperand>
                    </leftOperand>
                  </arguments>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.0/@fragments.0"/>
                </expression>
              </statements>
            </body>
          </statements>
        </body>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="init">
        <annotations originalCompilationUnit="//@compilationUnits.6">
          <type type="//@ownedElements.2/@ownedPackages.0/@ownedElements.5"/>
        </annotations>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="120"/>
                <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.3/@fragments.0"/>
                <type type="//@ownedElements.0/@ownedElements.0"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
              <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.5">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="100"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="120"/>
                <type type="//@ownedElements.0/@ownedElements.4"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.12/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.3">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="900"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                <type type="//@ownedElements.0/@ownedElements.1"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.3">
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2000"/>
                <arguments xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                <type type="//@ownedElements.0/@ownedElements.5"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.14/@fragments.0"/>
              <rightHandSide xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.2/@bodyDeclarations.2">
                <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1"/>
                <type type="//@ownedElements.0/@ownedElements.2"/>
              </rightHandSide>
            </expression>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="container">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="update">
        <annotations originalCompilationUnit="//@compilationUnits.6">
          <type type="//@ownedElements.2/@ownedPackages.0/@ownedElements.5"/>
        </annotations>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.34"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.0"/>
                  <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.36"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.35"/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.6">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.12/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.6">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.37"/>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.0">
              <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.4/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
              </arguments>
              <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@bodyDeclarations.0">
                <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@parameters.0"/>
              </expression>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//Press Esc to restart" prefixOfParent="true"/>
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@bodyDeclarations.2">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@parameters.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.33"/>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="container" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@expression/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@thenStatement/@statements.0/@expression/@expression">
          <modifier/>
          <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="delta">
          <modifier/>
          <type type="//@orphanTypes.0"/>
        </parameters>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="resetInitialValue" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@thenStatement/@statements.1/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//if game restart >> reset variable of game to initial value" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.0"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="6"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.1"/>
              <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.20/@fragments.0"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.18/@fragments.0"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.1"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1"/>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0"/>
              <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
            </expression>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="angleDistanceBeforeStarted" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.0/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//Projectile of angle that select before start" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="||">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;=">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0">
                      <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                    </leftOperand>
                  </rightOperand>
                  <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="600"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;=">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                  <leftOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                    <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0">
                      <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                    </operand>
                  </leftOperand>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                    <leftOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                      <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0">
                        <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                      </operand>
                    </leftOperand>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
                </expression>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                        <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                      </leftHandSide>
                      <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.3/@fragments.0"/>
                    </expression>
                  </statements>
                </thenStatement>
                <elseStatement xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                      <leftOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                        <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0">
                          <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                        </operand>
                      </leftOperand>
                    </rightOperand>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
                  </expression>
                  <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                    <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                      <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                        <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.1">
                          <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                        </leftHandSide>
                        <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1"/>
                      </expression>
                    </statements>
                  </thenStatement>
                </elseStatement>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="||">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;=">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                  <leftOperand xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                    <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0">
                      <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                    </operand>
                  </leftOperand>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;=">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0">
                      <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                    </leftOperand>
                  </rightOperand>
                  <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="600"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;">
                  <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                      <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                      <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0">
                        <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                      </leftOperand>
                    </rightOperand>
                    <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="600"/>
                  </rightOperand>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
                </expression>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0">
                        <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                      </leftHandSide>
                      <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                        <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1"/>
                      </rightHandSide>
                    </expression>
                  </statements>
                </thenStatement>
                <elseStatement xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                  <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
                    <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="+">
                      <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                        <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                        <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@fragments.0">
                          <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                        </leftOperand>
                      </rightOperand>
                      <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="600"/>
                    </rightOperand>
                    <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
                  </expression>
                  <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                    <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                      <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                        <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@fragments.0">
                          <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                        </leftHandSide>
                        <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1"/>
                      </expression>
                    </statements>
                  </thenStatement>
                </elseStatement>
              </statements>
            </thenStatement>
            <elseStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.7">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                </expression>
              </statements>
            </elseStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="bounceWhenCollision" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.3/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.10">
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.20/@fragments.0"/>
                </expression>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//Bouncing of character that contain 2 bounce to die" prefixOfParent="true"/>
                    <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.5">
                      <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                    </expression>
                  </statements>
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="--">
                      <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.20/@fragments.0"/>
                    </expression>
                  </statements>
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.0"/>
                      <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                    </expression>
                  </statements>
                </thenStatement>
                <elseStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
                      <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                    </expression>
                  </statements>
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.1"/>
                      <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                    </expression>
                  </statements>
                </elseStatement>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="scoreSummary" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.2/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="// SUM of score" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
              <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1"/>
              </rightHandSide>
            </expression>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.38"/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.39"/>
          </statements>
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.40"/>
          </statements>
        </body>
        <thrownExceptions type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="checkSkillSpeedUp" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.0/@thenStatement/@statements.6/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="// Skill speedup" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.8/@fragments.0"/>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="-=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.21/@fragments.0"/>
                  <rightHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="--">
                  <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="500"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.21/@fragments.0"/>
                </expression>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.8/@fragments.0"/>
                      <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                    </expression>
                  </statements>
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1"/>
                      <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                        <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="5"/>
                      </rightHandSide>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </thenStatement>
            <elseStatement xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
              <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="// check delay of skill" prefixOfParent="true"/>
              <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0"/>
              </expression>
              <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                  <expression xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="--">
                    <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0"/>
                  </expression>
                </statements>
              </thenStatement>
            </elseStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="increaseJumpLimitWhenScoreUp" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.0/@thenStatement/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@body/@statements.1/@thenStatement/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.36/@body/@statements.1/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//Check jump limit will get increase by 1 if score = 1200*k" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">=">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6">
                  <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.1"/>
                  <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1200"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.6">
                  <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.1"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.6">
                  <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
                  <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="6"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
                </expression>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
                      <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="6"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="checkGetCoins" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.36/@body/@statements.2/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="// check when rabbit collision to coin" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.7">
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.12/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.12/@fragments.0"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1000"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.38"/>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">=">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="4000"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.8">
                <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.12/@fragments.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@fragments.1">
                    <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.12/@fragments.0"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1200"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.38"/>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="checkBulletAttack" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.36/@body/@statements.3/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="// check when rabbit attack by bullet" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.7">
              <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.0">
                    <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2000"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.41"/>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">=">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="4000"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.8">
                <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.1">
                    <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2300"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.41"/>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">=">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="8000"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@fragments.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.9">
                <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6" operator="+=">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@fragments.2">
                    <qualifier xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.13/@fragments.0"/>
                  </leftHandSide>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2600"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.41"/>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="heartLifeWhenAttack" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.0/@thenStatement/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.1/@thenStatement/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@body/@statements.2/@thenStatement/@statements.1/@expression">
        <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//decrease heart life by 1, check heart life when life == 0 >> DIED!!" prefixOfParent="true"/>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="--">
              <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.18/@fragments.0"/>
            </expression>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.18/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.1"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="keyPressed">
        <annotations originalCompilationUnit="//@compilationUnits.6">
          <type type="//@ownedElements.2/@ownedPackages.0/@ownedElements.5"/>
        </annotations>
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.1"/>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.5/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@parameters.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.6/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@parameters.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.43"/>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.7/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@parameters.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.7">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.9">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.8/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@parameters.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@fragments.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.8">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.9">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.10/@fragments.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
              <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.9/@fragments.0">
                <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
              </rightOperand>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@parameters.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@fragments.0"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&amp;&amp;">
              <rightOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;=">
                <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0"/>
              </rightOperand>
              <leftOperand xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                <rightOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.10/@fragments.0">
                  <qualifier xsi:type="java:TypeAccess" type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
                </rightOperand>
                <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@parameters.0"/>
              </leftOperand>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.8/@fragments.0"/>
                  <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.21/@fragments.0"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@fragments.0"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="550"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@fragments.1"/>
                  <rightHandSide xsi:type="java:PrefixExpression" originalCompilationUnit="//@compilationUnits.6" operator="-">
                    <operand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="10"/>
                  </rightHandSide>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="key" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.0/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.1/@expression/@leftOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.2/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.3/@expression/@rightOperand/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.4/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.5/@expression/@leftOperand/@leftOperand">
          <modifier/>
          <type type="//@orphanTypes.0"/>
        </parameters>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="c">
          <modifier/>
          <type type="//@orphanTypes.6"/>
        </parameters>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="jump" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.1/@thenStatement/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.44"/>
              </statements>
              <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
                <comments xsi:type="java:LineComment" originalCompilationUnit="//@compilationUnits.6" content="//Check bounce when jump >> bounce will reset to initial value" prefixOfParent="true"/>
                <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="==">
                  <rightOperand xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6" value="true"/>
                  <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.0"/>
                </expression>
                <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@fragments.0"/>
                      <rightHandSide xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                    </expression>
                  </statements>
                  <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                    <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                      <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.20/@fragments.0"/>
                      <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="2"/>
                    </expression>
                  </statements>
                </thenStatement>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="jumpLimit" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.43/@body/@statements.0/@thenStatement/@statements.0/@expression">
        <modifier visibility="public"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.5">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.9/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:PostfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="--">
                  <operand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator=">">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="6"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="6"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
          <statements xsi:type="java:IfStatement" originalCompilationUnit="//@compilationUnits.6">
            <expression xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="&lt;">
              <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
              <leftOperand xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
            </expression>
            <thenStatement xsi:type="java:Block" originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:Assignment" originalCompilationUnit="//@compilationUnits.6">
                  <leftHandSide xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@fragments.0"/>
                  <rightHandSide xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="0"/>
                </expression>
              </statements>
            </thenStatement>
          </statements>
        </body>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <bodyDeclarations xsi:type="java:MethodDeclaration" originalCompilationUnit="//@compilationUnits.6" name="main">
        <modifier visibility="public" static="true"/>
        <body originalCompilationUnit="//@compilationUnits.6">
          <statements xsi:type="java:TryStatement" originalCompilationUnit="//@compilationUnits.6">
            <body originalCompilationUnit="//@compilationUnits.6">
              <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
                <type type="//@ownedElements.0/@ownedElements.6"/>
                <fragments originalCompilationUnit="//@compilationUnits.6" name="game" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.1/@fragments.0/@initializer/@arguments.0">
                  <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.22">
                    <arguments xsi:type="java:StringLiteral" originalCompilationUnit="//@compilationUnits.6" escapedValue="&quot;Fly Away Game&quot;"/>
                    <type type="//@ownedElements.0/@ownedElements.6"/>
                  </initializer>
                </fragments>
                <modifier/>
              </statements>
              <statements xsi:type="java:VariableDeclarationStatement" originalCompilationUnit="//@compilationUnits.6">
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
                <fragments originalCompilationUnit="//@compilationUnits.6" name="appgc" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.2/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.3/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.4/@expression/@expression">
                  <initializer xsi:type="java:ClassInstanceCreation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0">
                    <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.0/@fragments.0"/>
                    <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
                  </initializer>
                </fragments>
                <modifier/>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.1">
                  <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.0/@fragments.0"/>
                  <arguments xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.1/@fragments.0"/>
                  <arguments xsi:type="java:BooleanLiteral" originalCompilationUnit="//@compilationUnits.6"/>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.1/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@bodyDeclarations.3">
                  <arguments xsi:type="java:InfixExpression" originalCompilationUnit="//@compilationUnits.6" operator="/">
                    <rightOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="60"/>
                    <leftOperand xsi:type="java:NumberLiteral" originalCompilationUnit="//@compilationUnits.6" tokenValue="1000"/>
                  </arguments>
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.1/@fragments.0"/>
                </expression>
              </statements>
              <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.2">
                  <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.1/@fragments.0"/>
                </expression>
              </statements>
            </body>
            <catchClauses originalCompilationUnit="//@compilationUnits.6">
              <exception originalCompilationUnit="//@compilationUnits.6" name="e" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression/@expression">
                <modifier/>
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
              </exception>
              <body originalCompilationUnit="//@compilationUnits.6">
                <statements xsi:type="java:ExpressionStatement" originalCompilationUnit="//@compilationUnits.6">
                  <expression xsi:type="java:MethodInvocation" originalCompilationUnit="//@compilationUnits.6" method="//@ownedElements.2/@ownedPackages.0/@ownedElements.1/@bodyDeclarations.0">
                    <expression xsi:type="java:SingleVariableAccess" variable="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@catchClauses.0/@exception"/>
                  </expression>
                </statements>
              </body>
            </catchClauses>
          </statements>
        </body>
        <parameters originalCompilationUnit="//@compilationUnits.6" name="args">
          <modifier/>
          <type type="//@orphanTypes.9"/>
        </parameters>
        <returnType type="//@orphanTypes.5"/>
      </bodyDeclarations>
      <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.6"/>
    </ownedElements>
  </ownedElements>
  <ownedElements name="org" proxy="true">
    <ownedPackages name="newdawn" proxy="true">
      <ownedPackages name="slick" proxy="true">
        <ownedElements xsi:type="java:ClassDeclaration" name="Image" proxy="true" usagesInImports="//@compilationUnits.0/@imports.0 //@compilationUnits.1/@imports.1 //@compilationUnits.2/@imports.0 //@compilationUnits.4/@imports.0 //@compilationUnits.5/@imports.1 //@compilationUnits.6/@imports.5" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.3/@superClass //@ownedElements.0/@ownedElements.0/@bodyDeclarations.1/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.2/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.0/@elseStatement/@statements.0/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.1/@bodyDeclarations.2/@type //@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.5/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.2/@bodyDeclarations.0/@type //@ownedElements.0/@ownedElements.2/@bodyDeclarations.2/@body/@statements.0/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.1/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.4/@bodyDeclarations.1/@type //@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@body/@statements.2/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.2/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.7/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.3/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.3/@fragments.0/@initializer/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.4/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.4/@fragments.0/@initializer/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.0/@fragments.0/@initializer/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.2/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.2/@fragments.0/@initializer/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer/@type">
          <bodyDeclarations xsi:type="java:ConstructorDeclaration" name="Image" proxy="true" usages="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@body/@statements.2/@expression/@rightHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.0/@elseStatement/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@body/@statements.5/@expression/@rightHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.2/@body/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.1/@expression/@rightHandSide //@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@body/@statements.2/@expression/@rightHandSide //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@body/@statements.7/@expression/@rightHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.3/@fragments.0/@initializer //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.4/@fragments.0/@initializer //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.0/@fragments.0/@initializer //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.2/@fragments.0/@initializer //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.0/@fragments.0/@initializer">
            <parameters name="arg0" proxy="true">
              <type type="//@ownedElements.2/@ownedPackages.0/@ownedElements.2"/>
            </parameters>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="draw" proxy="true" usages="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@body/@statements.1/@expression //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@body/@statements.1/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@body/@statements.2/@expression //@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.0/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.1/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@body/@statements.2/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.5/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@body/@statements.3/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@body/@statements.1/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
            <parameters name="arg1" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="setRotation" proxy="true" usages="//@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@body/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.4/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="draw" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.5/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
            <parameters name="arg1" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
            <parameters name="arg2" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
            <parameters name="arg3" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
          </bodyDeclarations>
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.1"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Renderable" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@superInterfaces.0"/>
        <ownedElements xsi:type="java:ClassDeclaration" name="SlickException" proxy="true" usagesInImports="//@compilationUnits.0/@imports.1 //@compilationUnits.1/@imports.2 //@compilationUnits.2/@imports.1 //@compilationUnits.4/@imports.1 //@compilationUnits.5/@imports.2 //@compilationUnits.6/@imports.8" usagesInTypeAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@thrownExceptions.0 //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@thrownExceptions.0 //@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@thrownExceptions.0 //@ownedElements.0/@ownedElements.2/@bodyDeclarations.2/@thrownExceptions.0 //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@thrownExceptions.0 //@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@thrownExceptions.0 //@ownedElements.0/@ownedElements.4/@bodyDeclarations.11/@thrownExceptions.0 //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.36/@thrownExceptions.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@catchClauses.0/@exception/@type">
          <superClass type="//@ownedElements.2/@ownedPackages.0/@ownedElements.0"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="SpriteSheet" proxy="true" usagesInImports="//@compilationUnits.0/@imports.2">
          <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="AppGameContainer" proxy="true" usagesInImports="//@compilationUnits.6/@imports.0" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.1/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.1/@fragments.0/@initializer/@type">
          <bodyDeclarations xsi:type="java:ConstructorDeclaration" name="AppGameContainer" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.1/@fragments.0/@initializer">
            <parameters name="arg0" proxy="true">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.7"/>
            </parameters>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="setDisplayMode" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.2/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@orphanTypes.0"/>
            </parameters>
            <parameters name="arg1" proxy="true">
              <type type="//@orphanTypes.0"/>
            </parameters>
            <parameters name="arg2" proxy="true">
              <type type="//@orphanTypes.4"/>
            </parameters>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="start" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.4/@expression"/>
          <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="GameContainer" proxy="true" usagesInImports="//@compilationUnits.6/@imports.3" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@superClass //@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@parameters.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@parameters.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@parameters.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@parameters.0/@type">
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="getInput" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.1/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.2/@expression/@leftOperand/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.3/@expression/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@expression/@expression"/>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="exit" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.2/@thenStatement/@statements.0/@expression"/>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="reinit" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@thenStatement/@statements.0/@expression"/>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="setMinimumLogicUpdateInterval" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@body/@statements.3/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@orphanTypes.0"/>
            </parameters>
          </bodyDeclarations>
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="BasicGame" proxy="true" usagesInImports="//@compilationUnits.6/@imports.1" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@superClass">
          <bodyDeclarations xsi:type="java:ConstructorDeclaration" name="BasicGame" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.22/@body/@statements.0">
            <parameters name="arg0" proxy="true">
              <type type="//@ownedElements.2/@ownedPackages.0/@ownedElements.2"/>
            </parameters>
          </bodyDeclarations>
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.7"/>
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.8"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="Game" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.6/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.0/@parameters.0/@type"/>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="InputListener" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.6/@superInterfaces.1">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.9"/>
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.11"/>
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.12"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="MouseListener" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.8/@superInterfaces.0">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.10"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="ControlledInputReciever" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.9/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.11/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.12/@superInterfaces.0"/>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="KeyListener" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.8/@superInterfaces.1">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.10"/>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="ControllerListener" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.8/@superInterfaces.2">
          <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.10"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="Color" proxy="true" usagesInImports="//@compilationUnits.6/@imports.2" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@fragments.1/@initializer/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0/@bodyDeclarations.0/@parameters.2/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0/@bodyDeclarations.0/@parameters.5/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.0/@expression/@rightHandSide/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.2/@parameters.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.5/@expression/@rightHandSide/@type">
          <bodyDeclarations xsi:type="java:ConstructorDeclaration" name="Color" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.11/@fragments.1/@initializer //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.0/@expression/@rightHandSide //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.5/@expression/@rightHandSide">
            <parameters name="arg0" proxy="true">
              <type type="//@orphanTypes.0"/>
            </parameters>
            <parameters name="arg1" proxy="true">
              <type type="//@orphanTypes.0"/>
            </parameters>
            <parameters name="arg2" proxy="true">
              <type type="//@orphanTypes.0"/>
            </parameters>
          </bodyDeclarations>
          <superInterfaces type="//@ownedElements.2/@ownedPackages.1/@ownedElements.0"/>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="Graphics" proxy="true" usagesInImports="//@compilationUnits.6/@imports.4" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@parameters.1/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@parameters.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@parameters.1/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@parameters.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@parameters.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@parameters.0/@type">
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="drawString" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.2/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.3/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@body/@statements.0/@thenStatement/@statements.4/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.0/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.2/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.6/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.7/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.8/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.9/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.10/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@body/@statements.0/@thenStatement/@statements.11/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.3/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.6/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.7/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.2/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.3/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.4/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.7/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.8/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@ownedElements.2/@ownedPackages.0/@ownedElements.2"/>
            </parameters>
            <parameters name="arg1" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
            <parameters name="arg2" proxy="true">
              <type type="//@orphanTypes.2"/>
            </parameters>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="fill" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.2/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.1"/>
            </parameters>
            <parameters name="arg1" proxy="true">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.16"/>
            </parameters>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="setColor" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@body/@statements.6/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13"/>
            </parameters>
          </bodyDeclarations>
        </ownedElements>
        <ownedElements xsi:type="java:ClassDeclaration" name="Input" proxy="true" usagesInImports="//@compilationUnits.6/@imports.6" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.1/@expression/@arguments.0/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.2/@expression/@leftOperand/@arguments.0/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.3/@expression/@arguments.0/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@expression/@arguments.0/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.0/@expression/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.1/@expression/@leftOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.2/@expression/@rightOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.3/@expression/@rightOperand/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.4/@expression/@rightOperand/@qualifier //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.5/@expression/@leftOperand/@rightOperand/@qualifier">
          <bodyDeclarations xsi:type="java:MethodDeclaration" name="isKeyPressed" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.1/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.2/@expression/@leftOperand //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.3/@expression //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@expression">
            <parameters name="arg0" proxy="true">
              <type type="//@orphanTypes.0"/>
            </parameters>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_2" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.1/@expression/@arguments.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_3" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.2/@expression/@leftOperand/@arguments.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_4" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.3/@expression/@arguments.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_ESCAPE" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@expression/@arguments.0"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_ENTER" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.0/@expression/@leftOperand/@rightOperand"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_SPACE" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.1/@expression/@leftOperand/@rightOperand"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_UP" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.2/@expression/@rightOperand/@rightOperand"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_DOWN" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.3/@expression/@rightOperand/@rightOperand"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_1" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.4/@expression/@rightOperand"/>
          </bodyDeclarations>
          <bodyDeclarations xsi:type="java:FieldDeclaration" proxy="true">
            <fragments name="KEY_A" proxy="true" usageInVariableAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@body/@statements.5/@expression/@leftOperand/@rightOperand"/>
          </bodyDeclarations>
        </ownedElements>
        <ownedElements xsi:type="java:InterfaceDeclaration" name="ShapeFill" proxy="true" usagesInImports="//@compilationUnits.6/@imports.7" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0/@superInterfaces.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.1/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.1/@parameters.1/@type"/>
        <ownedPackages name="gui" proxy="true">
          <ownedElements xsi:type="java:InterfaceDeclaration" name="GUIContext" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@superInterfaces.0"/>
        </ownedPackages>
        <ownedPackages name="fills" proxy="true">
          <ownedElements xsi:type="java:ClassDeclaration" name="GradientFill" proxy="true" usagesInImports="//@compilationUnits.6/@imports.9" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer/@type">
            <bodyDeclarations xsi:type="java:ConstructorDeclaration" name="GradientFill" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.1/@fragments.0/@initializer">
              <parameters name="arg0" proxy="true">
                <type type="//@orphanTypes.2"/>
              </parameters>
              <parameters name="arg1" proxy="true">
                <type type="//@orphanTypes.2"/>
              </parameters>
              <parameters name="arg2" proxy="true">
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13"/>
              </parameters>
              <parameters name="arg3" proxy="true">
                <type type="//@orphanTypes.2"/>
              </parameters>
              <parameters name="arg4" proxy="true">
                <type type="//@orphanTypes.2"/>
              </parameters>
              <parameters name="arg5" proxy="true">
                <type type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13"/>
              </parameters>
            </bodyDeclarations>
            <superInterfaces type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.16"/>
          </ownedElements>
        </ownedPackages>
        <ownedPackages name="geom" proxy="true">
          <ownedElements xsi:type="java:ClassDeclaration" name="Rectangle" proxy="true" usagesInImports="//@compilationUnits.6/@imports.10" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@initializer/@type">
            <bodyDeclarations xsi:type="java:ConstructorDeclaration" name="Rectangle" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@body/@statements.0/@thenStatement/@statements.0/@fragments.0/@initializer">
              <parameters name="arg0" proxy="true">
                <type type="//@orphanTypes.2"/>
              </parameters>
              <parameters name="arg1" proxy="true">
                <type type="//@orphanTypes.2"/>
              </parameters>
              <parameters name="arg2" proxy="true">
                <type type="//@orphanTypes.2"/>
              </parameters>
              <parameters name="arg3" proxy="true">
                <type type="//@orphanTypes.2"/>
              </parameters>
            </bodyDeclarations>
            <superClass type="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.1"/>
          </ownedElements>
          <ownedElements xsi:type="java:ClassDeclaration" name="Shape" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0/@superClass //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.1/@parameters.0/@type">
            <superInterfaces type="//@ownedElements.2/@ownedPackages.1/@ownedElements.0"/>
          </ownedElements>
        </ownedPackages>
      </ownedPackages>
    </ownedPackages>
  </ownedElements>
  <ownedElements name="java" proxy="true">
    <ownedPackages name="lang" proxy="true">
      <ownedElements xsi:type="java:ClassDeclaration" name="Exception" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2/@superClass">
        <superClass type="//@ownedElements.2/@ownedPackages.0/@ownedElements.1"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="Throwable" proxy="true" usagesInTypeAccess="//@ownedElements.2/@ownedPackages.0/@ownedElements.0/@superClass">
        <bodyDeclarations xsi:type="java:MethodDeclaration" name="printStackTrace" proxy="true" usages="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@body/@statements.0/@catchClauses.0/@body/@statements.0/@expression"/>
        <superInterfaces type="//@ownedElements.2/@ownedPackages.1/@ownedElements.0"/>
      </ownedElements>
      <ownedElements xsi:type="java:ClassDeclaration" name="String" proxy="true" usagesInTypeAccess="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.22/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.6/@bodyDeclarations.0/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0/@parameters.0/@type //@orphanTypes.9/@elementType">
        <superInterfaces type="//@ownedElements.2/@ownedPackages.1/@ownedElements.0"/>
        <superInterfaces type="//@ownedElements.2/@ownedPackages.0/@ownedElements.3"/>
        <superInterfaces type="//@ownedElements.2/@ownedPackages.0/@ownedElements.4"/>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Comparable" proxy="true" usagesInTypeAccess="//@ownedElements.2/@ownedPackages.0/@ownedElements.2/@superInterfaces.1">
        <typeParameters name="T" proxy="true"/>
      </ownedElements>
      <ownedElements xsi:type="java:InterfaceDeclaration" name="CharSequence" proxy="true" usagesInTypeAccess="//@ownedElements.2/@ownedPackages.0/@ownedElements.2/@superInterfaces.2"/>
      <ownedElements xsi:type="java:AnnotationTypeDeclaration" name="Override" proxy="true" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@annotations.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@annotations.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@annotations.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@annotations.0/@type"/>
    </ownedPackages>
    <ownedPackages name="io" proxy="true">
      <ownedElements xsi:type="java:InterfaceDeclaration" name="Serializable" proxy="true" usagesInTypeAccess="//@ownedElements.2/@ownedPackages.0/@ownedElements.1/@superInterfaces.0 //@ownedElements.2/@ownedPackages.0/@ownedElements.2/@superInterfaces.0 //@ownedElements.2/@ownedPackages.2/@ownedElements.0/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13/@superInterfaces.0 //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.1/@superInterfaces.0"/>
    </ownedPackages>
    <ownedPackages name="util" proxy="true">
      <ownedElements xsi:type="java:ClassDeclaration" name="Random" proxy="true" usagesInImports="//@compilationUnits.1/@imports.0 //@compilationUnits.5/@imports.0" usagesInTypeAccess="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@body/@statements.0/@type //@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@body/@statements.0/@fragments.0/@initializer/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@body/@statements.0/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@body/@statements.0/@fragments.0/@initializer/@type">
        <bodyDeclarations xsi:type="java:ConstructorDeclaration" name="Random" proxy="true" usages="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@body/@statements.0/@fragments.0/@initializer //@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@body/@statements.0/@fragments.0/@initializer"/>
        <bodyDeclarations xsi:type="java:MethodDeclaration" name="nextInt" proxy="true" usages="//@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@body/@statements.1/@expression/@rightHandSide/@leftOperand //@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@body/@statements.1/@expression/@rightHandSide/@leftOperand">
          <parameters name="arg0" proxy="true">
            <type type="//@orphanTypes.0"/>
          </parameters>
        </bodyDeclarations>
        <superInterfaces type="//@ownedElements.2/@ownedPackages.1/@ownedElements.0"/>
      </ownedElements>
    </ownedPackages>
  </ownedElements>
  <orphanTypes xsi:type="java:PrimitiveTypeInt" name="int" usagesInTypeAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.0/@type //@ownedElements.0/@ownedElements.2/@bodyDeclarations.1/@type //@ownedElements.0/@ownedElements.2/@bodyDeclarations.2/@parameters.0/@type //@ownedElements.0/@ownedElements.4/@bodyDeclarations.2/@type //@ownedElements.0/@ownedElements.4/@bodyDeclarations.3/@type //@ownedElements.0/@ownedElements.4/@bodyDeclarations.4/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.1/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.2/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.15/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.16/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.17/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.18/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.19/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.20/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.21/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@body/@statements.0/@initializers.0/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@parameters.1/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@parameters.0/@type //@ownedElements.2/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.1/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13/@bodyDeclarations.0/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13/@bodyDeclarations.0/@parameters.1/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13/@bodyDeclarations.0/@parameters.2/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15/@bodyDeclarations.0/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.1/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.1/@parameters.1/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5/@bodyDeclarations.3/@parameters.0/@type"/>
  <orphanTypes xsi:type="java:PrimitiveTypeLong" name="long"/>
  <orphanTypes xsi:type="java:PrimitiveTypeFloat" name="float" usagesInTypeAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.2/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.3/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@parameters.0/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@parameters.1/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.4/@parameters.2/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@body/@statements.0/@thenStatement/@statements.0/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@body/@statements.0/@elseStatement/@statements.0/@expression/@rightHandSide/@type //@ownedElements.0/@ownedElements.1/@bodyDeclarations.0/@type //@ownedElements.0/@ownedElements.1/@bodyDeclarations.1/@type //@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@parameters.0/@type //@ownedElements.0/@ownedElements.1/@bodyDeclarations.3/@parameters.1/@type //@ownedElements.0/@ownedElements.1/@bodyDeclarations.4/@returnType //@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@parameters.0/@type //@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@parameters.1/@type //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@parameters.0/@type //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@parameters.1/@type //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@parameters.0/@type //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@parameters.1/@type //@ownedElements.0/@ownedElements.4/@bodyDeclarations.0/@type //@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@parameters.0/@type //@ownedElements.0/@ownedElements.4/@bodyDeclarations.5/@parameters.1/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.0/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.1/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@parameters.0/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.3/@parameters.1/@type //@ownedElements.0/@ownedElements.5/@bodyDeclarations.5/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.3/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.4/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.4/@fragments.0/@initializer/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.1/@parameters.1/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.2/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0/@parameters.1/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14/@bodyDeclarations.0/@parameters.2/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.3/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.3/@parameters.1/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.3/@parameters.2/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0/@bodyDeclarations.3/@parameters.3/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.0/@parameters.2/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0/@bodyDeclarations.0/@parameters.3/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0/@bodyDeclarations.0/@parameters.0/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0/@bodyDeclarations.0/@parameters.1/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0/@bodyDeclarations.0/@parameters.3/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0/@bodyDeclarations.0/@parameters.4/@type"/>
  <orphanTypes xsi:type="java:PrimitiveTypeDouble" name="double"/>
  <orphanTypes xsi:type="java:PrimitiveTypeBoolean" name="boolean" usagesInTypeAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.10/@returnType //@ownedElements.0/@ownedElements.1/@bodyDeclarations.7/@returnType //@ownedElements.0/@ownedElements.1/@bodyDeclarations.8/@returnType //@ownedElements.0/@ownedElements.3/@bodyDeclarations.0/@returnType //@ownedElements.0/@ownedElements.3/@bodyDeclarations.1/@returnType //@ownedElements.0/@ownedElements.3/@bodyDeclarations.2/@returnType //@ownedElements.0/@ownedElements.5/@bodyDeclarations.7/@returnType //@ownedElements.0/@ownedElements.5/@bodyDeclarations.8/@returnType //@ownedElements.0/@ownedElements.5/@bodyDeclarations.9/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.5/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.6/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.7/@type //@ownedElements.0/@ownedElements.6/@bodyDeclarations.8/@type //@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4/@bodyDeclarations.1/@parameters.2/@type"/>
  <orphanTypes xsi:type="java:PrimitiveTypeVoid" name="void" usagesInTypeAccess="//@ownedElements.0/@ownedElements.0/@bodyDeclarations.5/@returnType //@ownedElements.0/@ownedElements.0/@bodyDeclarations.6/@returnType //@ownedElements.0/@ownedElements.0/@bodyDeclarations.7/@returnType //@ownedElements.0/@ownedElements.0/@bodyDeclarations.8/@returnType //@ownedElements.0/@ownedElements.0/@bodyDeclarations.9/@returnType //@ownedElements.0/@ownedElements.1/@bodyDeclarations.5/@returnType //@ownedElements.0/@ownedElements.1/@bodyDeclarations.6/@returnType //@ownedElements.0/@ownedElements.2/@bodyDeclarations.3/@returnType //@ownedElements.0/@ownedElements.4/@bodyDeclarations.6/@returnType //@ownedElements.0/@ownedElements.4/@bodyDeclarations.7/@returnType //@ownedElements.0/@ownedElements.4/@bodyDeclarations.8/@returnType //@ownedElements.0/@ownedElements.4/@bodyDeclarations.9/@returnType //@ownedElements.0/@ownedElements.4/@bodyDeclarations.10/@returnType //@ownedElements.0/@ownedElements.4/@bodyDeclarations.11/@returnType //@ownedElements.0/@ownedElements.5/@bodyDeclarations.4/@returnType //@ownedElements.0/@ownedElements.5/@bodyDeclarations.6/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.23/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.24/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.26/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.27/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.31/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.36/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.38/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.41/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.43/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.44/@returnType //@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@returnType"/>
  <orphanTypes xsi:type="java:PrimitiveTypeChar" name="char" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.42/@parameters.1/@type"/>
  <orphanTypes xsi:type="java:PrimitiveTypeShort" name="short"/>
  <orphanTypes xsi:type="java:PrimitiveTypeByte" name="byte"/>
  <orphanTypes xsi:type="java:ArrayType" name="java.lang.String[]" usagesInTypeAccess="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.45/@parameters.0/@type" dimensions="1">
    <elementType type="//@ownedElements.2/@ownedPackages.0/@ownedElements.2"/>
  </orphanTypes>
  <compilationUnits name="FlyDot.java" originalFilePath="C:\Users\Chayenjr\workspace\GameProject\src\FlyAwayGame\FlyDot.java" package="//@ownedElements.0" types="//@ownedElements.0/@ownedElements.0">
    <imports originalCompilationUnit="//@compilationUnits.0" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.0" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
    <imports originalCompilationUnit="//@compilationUnits.0" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.3"/>
  </compilationUnits>
  <compilationUnits name="Coins.java" originalFilePath="C:\Users\Chayenjr\workspace\GameProject\src\FlyAwayGame\Coins.java" package="//@ownedElements.0" types="//@ownedElements.0/@ownedElements.1">
    <imports originalCompilationUnit="//@compilationUnits.1" importedElement="//@ownedElements.2/@ownedPackages.2/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.1" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.1" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
  </compilationUnits>
  <compilationUnits name="SpeedUp.java" originalFilePath="C:\Users\Chayenjr\workspace\GameProject\src\FlyAwayGame\SpeedUp.java" package="//@ownedElements.0" types="//@ownedElements.0/@ownedElements.2">
    <imports originalCompilationUnit="//@compilationUnits.2" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.2" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
  </compilationUnits>
  <compilationUnits name="Colision.java" originalFilePath="C:\Users\Chayenjr\workspace\GameProject\src\FlyAwayGame\Colision.java" package="//@ownedElements.0" types="//@ownedElements.0/@ownedElements.3"/>
  <compilationUnits name="AngleBow.java" originalFilePath="C:\Users\Chayenjr\workspace\GameProject\src\FlyAwayGame\AngleBow.java" package="//@ownedElements.0" types="//@ownedElements.0/@ownedElements.4">
    <imports originalCompilationUnit="//@compilationUnits.4" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.4" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
  </compilationUnits>
  <compilationUnits name="Bullet.java" originalFilePath="C:\Users\Chayenjr\workspace\GameProject\src\FlyAwayGame\Bullet.java" package="//@ownedElements.0" types="//@ownedElements.0/@ownedElements.5">
    <imports originalCompilationUnit="//@compilationUnits.5" importedElement="//@ownedElements.2/@ownedPackages.2/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.5" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.5" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
  </compilationUnits>
  <compilationUnits name="FlyAwayGame.java" originalFilePath="C:\Users\Chayenjr\workspace\GameProject\src\FlyAwayGame\FlyAwayGame.java" commentList="//@ownedElements.0/@ownedElements.6/@bodyDeclarations.25/@body/@statements.0/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.28/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.29/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.30/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.32/@body/@statements.1/@thenStatement/@statements.0/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.33/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.34/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.35/@body/@statements.0/@thenStatement/@statements.0/@thenStatement/@statements.0/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.36/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.37/@body/@statements.0/@elseStatement/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.38/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.39/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.40/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.41/@comments.0 //@ownedElements.0/@ownedElements.6/@bodyDeclarations.43/@body/@statements.0/@thenStatement/@statements.1/@comments.0" package="//@ownedElements.0" types="//@ownedElements.0/@ownedElements.6">
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.4"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.6"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.13"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.5"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.14"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.15"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.16"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedElements.2"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.1/@ownedElements.0"/>
    <imports originalCompilationUnit="//@compilationUnits.6" importedElement="//@ownedElements.1/@ownedPackages.0/@ownedPackages.0/@ownedPackages.2/@ownedElements.0"/>
  </compilationUnits>
</java:Model>
